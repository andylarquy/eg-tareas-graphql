directive @isPrivate on FIELD_DEFINITION

type User {
    _id: ID!
    name: String!
    email: String!
    password: String @isPrivate
    tasks: [Task]
}

type Task {
    _id: ID!
    title: String!
    description: String!
    priority: Int
}

input UserInput {
    name: String!
    email: String!
    password: String!
}

input TaskInput {
    title: String!
    description: String!
    priority: Int
}

type Query {
    getListOfUsers: [User]
}

type Query {
    getListOfTasks: [Task]
}

type Query {
    getTasksOfUser(userId: ID!): [Task]
}

type Mutation {
    createUser(userInput: UserInput): User
}

type Mutation {
    updateUser(userInput: UserInput): User
}

type Mutation {
    deleteUser(userInput: UserInput): User
}

type Mutation {
    addTask(userId: ID!, taskInput: TaskInput!): Task
}

type Mutation {
    updateTask(taskId:ID!, taskInput: TaskInput!): Task
}

type Mutation {
    deleteTask(taskId: ID!): ID
}